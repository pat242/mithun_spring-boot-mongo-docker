apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: spring-deploy
  name: spring-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-deploy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spring-deploy
    spec:
      containers:
      - image: pat242/spring-boot-mongo
        name: spring-deploy
        ports:
        - name: springboot
          containerPort: 8080      
---
# Node Port Service
apiVersion: v1
kind: Service
metadata:
  labels:
    name: spring-deploy
  name: spring-servie
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    name: spring-deploy
---
# Mongo host path rc
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo-deploy
  name: mongo-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-deploy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-deploy
    spec:
      containers:
      - image: mongo
        name: mongo-deploy
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        hostPath:
         path: /tmp/dbbackup
---
# Mongo Node Port RC
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo-deploy
  name: mongo-service
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo-deploy
